# -*- coding=UTF-8 -*

from urllib import request
from urllib import error
import re
from pypinyin import lazy_pinyin
from html.parser import HTMLParser

def str_pinyin(city):
    city = lazy_pinyin(city)
    city_pinyin = ''
    for x in city:
        city_pinyin = city_pinyin + x
    return city_pinyin

class MyHTMLParser(HTMLParser):
    flag = 0
    res = []
    date_weather = []
    is_get_data = 0

    def handle_starttag(self, tag, attrs):
        if tag == 'ul':
            for attr in attrs:
                if re.match(r'now-wea-detail', attr[1]):
                    self.flag = 1
        if tag == 'div':
            for attr in attrs:
                if re.match(r'item top3', attr[1]):
                    self.flag = 2

        if tag == 'br' and self.flag == 2:
            self.is_get_data = '日期'

        if tag == 'li' and self.flag == 1:
            self.is_get_data = '天气详情'

        if tag == 'i' and self.flag == 1:
            self.is_get_data = '数值'

    def handle_endtag(self, tag):
        if self.flag == 1 and tag == 'ul':
            self.flag = 0
        if self.flag == 2 and tag == 'div':
            self.flag = 0

    def handle_data(self, data):
        if self.is_get_data and self.flag == 1:
            if self.is_get_data == '天气详情':
                self.res.append([data, 0])
            else:
                self.res[len(self.res) - 1][1] = data
            self.is_get_data = None
        if self.is_get_data and self.flag == 2:
            self.date_weather.append(data)


while 1:
    print('*******************欢迎使用天气查询系统！！！*******************')
    city = input('请输入城市名（输入"退出"退出系统）：')
    if city == '退出':
        break
    parser = MyHTMLParser()
    MyHTMLParser.flag = 0
    MyHTMLParser.res = []
    MyHTMLParser.date_weather = []
    MyHTMLParser.is_get_data = 0

    '''
    with request.urlopen('http://www.tianqi2345.com/yubao/chengdu.htm') as f:
        data = f.read().decode('utf-8')
    '''

    print('start')
    req = request.Request('http://www.tianqi2345.com/yubao/'+str_pinyin(city)+'.htm')
    req.add_header('User-Agent', 'Mozilla/5.0 (Windows NT 6.3; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/63.0.3239.108 Safari/537.36')
    print('网络连接中......')
    try:
        response = request.urlopen(req)
    except ConnectionResetError as e:
        print('连接超时-ConnectionResetError:', e )
        continue
    except error.HTTPError as e:
        print('请检查输入地址是否有效!:', e )
        continue
    with response:
        data = response.read().decode('utf-8')

    parser.feed(data)

    if MyHTMLParser.date_weather == []:
        print('404: Not Found!  请检查输入地址是否有效!')
        continue

    ans = []
    for x in MyHTMLParser.date_weather:
        if re.match(r'\d{1,2}月\d{1,2}日', x):
            ans.append(re.match(r'\d{1,2}月\d{1,2}日', x).group())
            continue
        if re.match(r'(今|明|后)天', x) or len(x) <= 1:
            continue
        if re.match(r'星期.?',x):
            continue
        ans.append(x)

    print('------------今天-----------')
    print('日期：%s' % ans[0])
    print('天气：%s' % ans[1][3:])
    print('温度：%s' % ans[2])
    for item in MyHTMLParser.res:
        if item[1] != 0:
            print("%s %s " % (item[0], item[1]))
    print('------------明天-----------')
    print('日期：%s' % ans[3])
    print('天气：%s' % ans[4][3:])
    print('温度：%s' % ans[5])
    print('风力：%s' % ans[6])
    print('------------后天-----------')
    print('日期：%s' % ans[7])
    print('天气：%s' % ans[8][3:])
    print('温度：%s' % ans[9])
    print('风力：%s' % ans[10])

